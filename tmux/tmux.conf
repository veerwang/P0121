# color
set -g default-terminal "screen-256color"

# status bar
#
#set -g status-interval 1
#set -g status-justify centre # center align window list
#set -g status-left-length 20
#set -g status-right-length 140
#set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#set -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a %l:%M:%S %p #[default] #[fg=black]%Y-%m-%d '

# tmux-powerline must be install forward
# git clone git://github.com/erikw/tmux-powerline.git
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/tmux-powerline/powerline.sh right)"

bind [ run '~/tmux-powerline/mute_powerline.sh left'		# Mute left statusbar.
bind ] run '~/tmux-powerline/mute_powerline.sh right'		# Mute right statusbar.

# default statusbar colors
set -g status-fg colour37
set -g status-bg colour235
set -g status-attr default 

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default 
#set-window-option -g window-status-attr dim
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour208]⮀#[fg=colour255, bg=colour208] #I ⮁ #W #[fg=colour208, bg=colour235]⮀"

# active window title colors
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
#setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
#bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Highlight active window
#set-window-option -g window-status-current-bg black 
#set-window-option -g window-status-current-fg green 

# Vi copypaste mode
set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

#bind 0 select-pane -t 0
#bind 1 select-pane -t 1
#bind 2 select-pane -t 2
#bind 3 select-pane -t 3
#bind 4 select-pane -t 4

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# rm mouse mode fail
set -g mode-mouse off

# make mouse mode the roll the bar
set-window-option -g mode-mouse on

# split window
unbind '"'
bind - split-window -v
unbind %
bind | split-window -h

#create new window or select different widnow
bind -n S-Down confirm-before -p "Close the window? #W? (y/n)" kill-window  	# Shift-Down 关闭窗口
bind -n S-Left prev 								# Shift-Left 上个窗口
bind -n S-Right next 								# Shift-Right 下个窗口
bind -n S-Up neww 								# Shift-Up 新建窗口

#neww vim
