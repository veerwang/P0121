"==========================================================================================
"
" Authot: 	kevin.wang
" Date:   	2019.03.02
" Description:  ÈÖçÁΩÆÊñá‰ª∂ÂÖ•Âè£ 
"
"==========================================================================================

" Âä†ËΩΩÊèí‰ª∂ÁÆ°ÁêÜÊñá‰ª∂ 
so $HOME/.vim/config/plugins.vim

"30) set for gtags
" need pip install pygments
let $GTAGSLABEL = 'native-pygments'
let $GTAGSCONF = '/usr/local/share/gtags/gtags.conf' " 

"32) fzf fuzzy finder
set rtp+=/usr/bin/fzf

" Âä†ËΩΩÈÄöÁî®ËÆæÁΩÆ
so $HOME/.vim/config/main.vim

"
" plugins settings 
"

"1) fugitive key map
"map <silent> <f3> :Gstatus<cr>
"move to venu function
" merginal plugin
"2) vim-headerguard 
"add headerguard
" vim-headerguard configure
function! g:HeaderguardName()
return "INCLUDED_" . toupper(expand('%:t:gs/[^0-9a-zA-Z_]/_/g'))
endfunction
"4) airline 
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tagbar#enabled = 1
let g:airline#extensions#tagbar#flags = ' '
"let g:airline_theme='papercolor'
"let g:airline_theme='badwolf'
let g:airline_theme='base16_vim'
let g:airline#extensions#tabline#tab_nr_type = 1
let g:airline_section_c='%F'
let g:airline#extensions#ctrlp#show_adjacent_modes = 1

let g:airline_theme_patch_func = 'AirlineThemePatch'
function! AirlineThemePatch(palette)
	if g:airline_theme == 'badwolf'
		for colors in values(a:palette.inactive)
			let colors[3] = 245
		endfor
	endif
endfunction
"5) tagbar
let g:tagbar_ctags_bin='/usr/bin/ctags'
let g:tagbar_width=30
highlight TagbarScope guifg=Green ctermfg=Green
"autocmd BufReadPost *.cpp,*.c,*.h,*.hpp,*.cc,*.cxx call tagbar#autoopen()
"6) NERDTree configration
let g:NERDTreeWinPos="left"
let g:NERDTreeShowBookmarks=1
let g:NERDTreeWinSize=25
"7) easymotion set
map ss <Plug>(easymotion-s)
let g:EasyMotion_force_csapprox = 1
"8) Show undo tree
let g:undotree_WindowLayout=2
" Persistent undo
set undofile
set undodir=~/.vim/undodir
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer reload
"9) Set the ycm configrature,it will first read from current file
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
let g:ycm_semantic_triggers = {}
let g:ycm_semantic_triggers.c = ['->', '.', ' ', '(', '[', '&']
let g:ycm_semantic_triggers.cpp = ['->', '.', ' ', '(', '[', '&']
let g:ycm_collect_identifiers_from_tag_files=1
let g:ycm_min_num_of_chars_for_completion=2
let g:ycm_auto_trigger=1
let g:ycm_show_diagnostics_ui=0
set completeopt=menu,menuone
let g:ycm_add_preview_to_completeopt=0
let g:ycm_autoclose_preview_window_after_insertion=1
let g:ycm_confirm_extra_conf=0
let g:ycm_filetype_blacklist = {
        \ 'tagbar' : 1,
        \ 'qf' : 1,
        \ 'notes' : 1,
        \ 'markdown' : 1,
        \ 'unite' : 1,
        \ 'text' : 1,
        \ 'vimwiki' : 1,
        \ 'pandoc' : 1,
        \ 'infolog' : 1,
        \ 'mail' : 1
        \}
let g:ycm_filetype_specific_completion_to_disable = {
        \ 'gitcommit': 1
        \}
"10) gutentags_plus 
" enable gtags module
let g:gutentags_modules = ['ctags', 'gtags_cscope']
" config project root markers.
let g:gutentags_project_root = ['.root','.svn','.git','.project']
" generate datebases in my cache directory, prevent gtags files polluting my project
let g:gutentags_cache_dir = expand('~/.cache/tags')
" change focus to quickfix window after search (optional).
let g:gutentags_plus_switch = 1
"11)jedi for python
"need  jedi and python-syntax plugins
let g:jedi#auto_initialization=1
let g:jedi#completions_command = "<C-N>"
"13) Leadf fuzzy find tool 
"14) vimgitlog
let g:GITLOG_default_mode = 2
"15) tig-explore base on tig
"17) rainbow
let g:rainbow_active = 1
"18) startify
let g:startify_bookmarks = [ '~/.vimrc', '~/.zshrc' ]
"19) ag.vim search sprint from .git root
let g:ag_working_path_mode="r"
"20) vim-nots
let g:notes_directories = [ '/home/kevin/.vim/notes' ]

"5) Alt-w write the file
nmap w :w <cr>
nmap  :close<cr>

"colorscheme badwolf  
"this set bg method
autocmd ColorScheme janah highlight Normal ctermbg=235
colorscheme janah 

" Âä†ËΩΩËèúÂçïÊèí‰ª∂
so $HOME/.vim/config/menu.vim
